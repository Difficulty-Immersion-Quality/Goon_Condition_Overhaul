// TODO: Make Wet a thing for weapons, and all that other stuff floating around in my head.
// TODO: Dipping in Hellfire and Holy Fire, all that shit, different dipp effects etc.
// TODO: Functions for surface grouping.
// ==================================== Dipping ====================================
// Changes: Everything that is fire is dippable as if it was fire, including Karlach kekw.

new entry "Target_Dip"
type "SpellData"
data "SpellType" "Target"
using "Target_Dip"
// data "SpellProperties" "GROUND:IF(Surface('SurfaceFire') and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfaceFire') and WieldingWeapon('Dippable',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0);TARGET:IF((HasStatus('BURNING') or HasStatus('FLAMING_SPHERE_AURA')) and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);TARGET:IF((HasStatus('BURNING') or HasStatus('FLAMING_SPHERE_AURA')) and WieldingWeapon('Dippable',true,false,context.Source)): ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfaceHellfire') and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfaceHellfire') and WieldingWeapon('Dippable',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfacePoison') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,ALCH_TOXIN_BASIC_DIPPED,100,10);GROUND:IF(Surface('SurfacePoison') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,ALCH_TOXIN_BASIC_DIPPED,100,10);GROUND:IF(Surface('SurfaceSerpentVenom') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,TOXIN_SERPENTVENOM_DIPPED,100,10);GROUND:IF(Surface('SurfaceSerpentVenom') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,TOXIN_SERPENTVENOM_DIPPED,100,10);GROUND:IF(Surface('SurfaceWyvernPoison') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,TOXIN_WYVERN_DIPPED,100,10);GROUND:IF(Surface('SurfaceWyvernPoison') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,TOXIN_WYVERN_DIPPED,100,10);GROUND:IF(Surface('SurfacePurpleWormPoison') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,TOXIN_PURPLEWORM_DIPPED,100,10);GROUND:IF(Surface('SurfacePurpleWormPoison') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,TOXIN_PURPLEWORM_DIPPED,100,10);GROUND:IF(Surface('SurfaceWater') and WieldingWeapon('Dippable',false,false,context.Source)): ApplyEquipmentStatus(SELF,MainHand,DIPPED_WATER,100,0);GROUND:IF(Surface('SurfaceWater') and WieldingWeapon('Dippable',true,false,context.Source)): ApplyEquipmentStatus(SELF,OffHand,DIPPED_WATER,100,0);GROUND:DealDamage(MainMeleeWeapon,MainMeleeWeaponDamageType);GROUND:ExecuteWeaponFunctors(MainHand);GROUND:DealDamage(OffhandMeleeWeapon,MainMeleeWeaponDamageType);GROUND:ExecuteWeaponFunctors(OffHand)"
data "SpellProperties" "GROUND:IF(Surface('SurfaceFire') and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfaceFire') and WieldingWeapon('Dippable',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0);TARGET:IF((Goon_HasBurningConditionOrTag_Normal()) and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);TARGET:IF((Goon_HasBurningConditionOrTag_Normal()) and WieldingWeapon('Dippable',true,false,context.Source)): ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfaceHellfire') and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfaceHellfire') and WieldingWeapon('Dippable',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0);GROUND:IF(Surface('SurfacePoison') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,ALCH_TOXIN_BASIC_DIPPED,100,10);GROUND:IF(Surface('SurfacePoison') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,ALCH_TOXIN_BASIC_DIPPED,100,10);GROUND:IF(Surface('SurfaceSerpentVenom') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,TOXIN_SERPENTVENOM_DIPPED,100,10);GROUND:IF(Surface('SurfaceSerpentVenom') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,TOXIN_SERPENTVENOM_DIPPED,100,10);GROUND:IF(Surface('SurfaceWyvernPoison') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,TOXIN_WYVERN_DIPPED,100,10);GROUND:IF(Surface('SurfaceWyvernPoison') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,TOXIN_WYVERN_DIPPED,100,10);GROUND:IF(Surface('SurfacePurpleWormPoison') and WieldingWeapon('Dippable',false,false,context.Source) and not WieldingWeapon('Torch',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,TOXIN_PURPLEWORM_DIPPED,100,10);GROUND:IF(Surface('SurfacePurpleWormPoison') and WieldingWeapon('Dippable',true,false,context.Source) and not WieldingWeapon('Torch',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,TOXIN_PURPLEWORM_DIPPED,100,10);GROUND:IF(Surface('SurfaceWater') and WieldingWeapon('Dippable',false,false,context.Source)): ApplyEquipmentStatus(SELF,MainHand,DIPPED_WATER,100,0);GROUND:IF(Surface('SurfaceWater') and WieldingWeapon('Dippable',true,false,context.Source)): ApplyEquipmentStatus(SELF,OffHand,DIPPED_WATER,100,0);GROUND:DealDamage(MainMeleeWeapon,MainMeleeWeaponDamageType);GROUND:ExecuteWeaponFunctors(MainHand);GROUND:DealDamage(OffhandMeleeWeapon,MainMeleeWeaponDamageType);GROUND:ExecuteWeaponFunctors(OffHand);TARGET:IF(Goon_IsKarlachCooking() and WieldingWeapon('Dippable',false,false,context.Source)):ApplyEquipmentStatus(SELF,MainHand,DIPPED_FIRE_SWITCH,100,0);TARGET:IF(Goon_IsKarlachCooking() and WieldingWeapon('Dippable',true,false,context.Source)):ApplyEquipmentStatus(SELF,OffHand,DIPPED_FIRE_SWITCH,100,0)"
// data "TargetConditions" "IsDippableSurface() or IsOnFire()"
data "TargetConditions" "IsDippableSurface() or Goon_HasBurningConditionOrTag()"

// ==================================== Dipped in Fire ====================================

// new entry "DIPPED_FIRE"
// type "StatusData"
// data "StatusType" "BOOST"
// Dipped in Fire
// data "DisplayName" "hcb3a7e86gd433g41b6gbea4gd9676fec3b7b;1"
// Weapon deals additional Fire damage.
// data "Description" "h8c411b87gae66g4a51g8233g56b5043945a9;2"
// data "Icon" "Action_DippedFire_Melee"
// data "StatusEffectOverride" "44d77ebf-fc9e-407d-b20f-257019351f2a"
// data "SoundStart" "Action_Cast_Dipped_Fire"
// data "SoundStop" "Action_Prepare_Dipped_Fire_Loop_Stop"
// data "StackId" "DIPPED"
// data "Boosts" "WeaponDamage(1d4, Fire);IF(Item(context.Source)):WeaponProperty(Unstowable)"