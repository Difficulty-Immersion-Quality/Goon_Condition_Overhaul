// ==================================== Prone ====================================

// new entry "PRONE"
// type "StatusData"
// data "StatusType" "KNOCKED_DOWN"
// // Prone
// data "DisplayName" "hf436e702gfa14g45aagabaeg6fa3d54c1061;1"
// // Can't move or take actions, bonus actions, or reactions, and has <LSTag Tooltip="Disadvantage">Disadvantage</LSTag> on Strength and Dexterity <LSTag Tooltip="SavingThrow">Saving Throws</LSTag>. <br><br>Attacks against a Prone creature have <LSTag Tooltip="Advantage">Advantage
// data "Description" "hfe0869e3g3954g4eb1g915agd39ade42ecde;3"
// data "DescriptionParams" "Distance(3)"
// data "Icon" "Status_Prone"
// data "FormatColor" "White"
// data "StillAnimationType" "KO"
// data "StillAnimationPriority" "KO"
// data "UseLyingPickingState" "Yes"
// data "Boosts" "Disadvantage(SavingThrow, Strength);Disadvantage(SavingThrow, Dexterity);IF(not DistanceToTargetGreaterThan(3)):Advantage(AttackTarget);DetectDisturbancesBlock(false);"
// data "RemoveConditions" "(HasActionResource('Movement', 50, 0, true) and not HasPassive('Athlete_StandUp') and not HasPassive('LeapToYourFeet')) or (HasPassive('Athlete_StandUp') and HasActionResource('Movement', 1.5, 0)) or (HasActionResource('Movement', 1, 0, true) and HasPassive('Athlete_StandUp')) or (HasPassive('LeapToYourFeet') and HasActionResource('Movement', 1.5, 0)) or (HasActionResource('Movement', 1, 0, true) and HasPassive('LeapToYourFeet'))"
// data "StatusPropertyFlags" "IgnoredByImmobilized;InitiateCombat;DisableOverhead"
// data "RemoveEvents" "OnTurn"
// data "OnApplyFunctors" "RemoveStatus(SNEAKING);RemoveStatus(SLEEP);RemoveStatus(SG_Sleeping);"
// data "OnRemoveFunctors" "IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and not HasPassive('Athlete_StandUp') and not HasPassive('LeapToYourFeet')):UseActionResource(Movement, 50%, 0, true);IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and HasPassive('Athlete_StandUp') and not HasPassive('LeapToYourFeet') and HasActionResource('Movement', 1.5, 0)):UseActionResource(Movement, 1.5, 0, true);IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and HasPassive('Athlete_StandUp') and not HasPassive('LeapToYourFeet') and not HasActionResource('Movement', 1.5, 0)):UseActionResource(Movement, 100%, 0, true);AI_ONLY:ApplyStatus(AI_HELPER_PRONE,100,2);IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and HasPassive('LeapToYourFeet') and not HasPassive('Athlete_StandUp') and HasActionResource('Movement', 1.5, 0)):UseActionResource(Movement, 1.5, 0, true);IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and HasPassive('LeapToYourFeet') and not HasPassive('Athlete_StandUp') and not HasActionResource('Movement', 1.5, 0)):UseActionResource(Movement, 100%, 0, true);AI_ONLY:ApplyStatus(AI_HELPER_PRONE,100,2);IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and HasPassive('LeapToYourFeet') and HasPassive('Athlete_StandUp') and HasActionResource('Movement', 1.5, 0)):UseActionResource(Movement, 1.5, 0, true);IF(RemoveCause(StatusRemoveCause.Condition) and TurnBased(context.Source) and HasPassive('LeapToYourFeet') and HasPassive('Athlete_StandUp') and not HasActionResource('Movement', 1.5, 0)):UseActionResource(Movement, 100%, 0, true);AI_ONLY:ApplyStatus(AI_HELPER_PRONE,100,2);"
// data "StatusGroups" "SG_Prone;SG_Condition;SG_Unconscious"
// data "SplatterDirtAmount" "0.1"
// data "Sheathing" "Sheathed"